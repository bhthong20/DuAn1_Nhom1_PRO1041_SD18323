/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import entity.HoaDon;
import entity.HoaDonChiTiet;
import java.io.File;
import java.io.FileOutputStream;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import service.HoaDonService;
import service.ServiceImpl.HoaDonServiceImpl;

/**
 *
 * @author thong
 */
public class HoaDonView extends javax.swing.JPanel {

    /**
     * Creates new form HoaDonView
     */
    private HoaDonServiceImpl hdsi = new HoaDonService();
    DefaultTableModel model = new DefaultTableModel();
    private List<HoaDon> listHD = hdsi.getListHD();
    DecimalFormat formatter = new DecimalFormat("###,###,###");

    public HoaDonView() {
        initComponents();
        loatTB();
    }

    public void loatTB() {
        List<HoaDon> listHD = hdsi.getListHD();
        model = (DefaultTableModel) tblHD.getModel();
        model.setRowCount(0);
        for (HoaDon x : listHD) {
            Object row[] = new Object[]{
                x.getMaHD(), x.getManhanVien().getTenNV(), x.getMakhachHang().getTenKH(), formatter.format(x.getTongTien()), formatter.format(x.getThanhToan()), formatter.format(x.getTienThua()), x.getPhuongThucThanhToan(), x.getNgayTao(), x.getNgayThanhToan(), x.getTinhTrang() == 1 ? "Đã thanh toán" : "Chưa thanh toán", x.getGhiChu()
            };
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtSearchMHD = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cboTrangThai = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jDCNgayStart = new com.toedter.calendar.JDateChooser();
        JDCNgayEnd = new com.toedter.calendar.JDateChooser();
        btnSearch = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblHD = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHDCT = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel4.setText("Mã hóa đơn:");

        txtSearchMHD.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtSearchMHDCaretUpdate(evt);
            }
        });
        txtSearchMHD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchMHDKeyReleased(evt);
            }
        });

        jLabel5.setText("Trạng thái:");

        cboTrangThai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Đã thanh toán", "Chưa thanh toán" }));
        cboTrangThai.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboTrangThaiItemStateChanged(evt);
            }
        });

        jLabel6.setText("Ngày:");

        jLabel7.setText("Ngày:");

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSearchMHD, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDCNgayStart, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JDCNgayEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(btnSearch)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSearch)
                    .addComponent(jDCNgayStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(txtSearchMHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(cboTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(JDCNgayEnd, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        tblHD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã hóa đơn", "Tên NV", "Tên KH", "Tổng tiền", "Thanh Toán", "Tiền thừa", "Hình thức thanh toán", "Ngày tạo hóa đơn", "Ngày thanh toán", "Trạng thái", "Ghi Chú"
            }
        ));
        tblHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHDMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblHD);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Lọc hóa đơn");

        jButton1.setBackground(new java.awt.Color(248, 169, 50));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setText("Xuất file");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(16, 16, 16))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(2, 2, 2)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        tblHDCT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã hóa đơn chi tiết", "Mã hóa đơn", "Mã sản phẩm", "Tên sản phẩm", "Số lượng", "Đơn giá", "Thành tiền"
            }
        ));
        jScrollPane1.setViewportView(tblHDCT);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Hóa Đơn Chi Tiết");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Hóa Đơn");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1247, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchMHDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchMHDKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchMHDKeyReleased

    private void cboTrangThaiItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboTrangThaiItemStateChanged
        // TODO add your handling code here:
        if (cboTrangThai.getSelectedItem().equals("Đã thanh toán")) {
            List<HoaDon> listHD = hdsi.searchTinhTrang(1);
            model = (DefaultTableModel) tblHD.getModel();
            model.setRowCount(0);
            for (HoaDon x : listHD) {
                Object row[] = new Object[]{
                    x.getMaHD(), x.getManhanVien().getTenNV(), x.getMakhachHang().getTenKH(), formatter.format(x.getTongTien()), formatter.format(x.getThanhToan()), formatter.format(x.getTienThua()), x.getPhuongThucThanhToan(), x.getNgayTao(), x.getNgayThanhToan(), x.getTinhTrang() == 1 ? "Đã thanh toán" : "Chưa thanh toán", x.getGhiChu()
                };
                model.addRow(row);
            }
        } else if (cboTrangThai.getSelectedItem().equals("Chưa thanh toán")) {
            List<HoaDon> listHD = hdsi.searchTinhTrang(0);
            model = (DefaultTableModel) tblHD.getModel();
            model.setRowCount(0);
            for (HoaDon x : listHD) {
                Object row[] = new Object[]{
                    x.getMaHD(), x.getManhanVien().getTenNV(), x.getMakhachHang().getTenKH(), formatter.format(x.getTongTien()), formatter.format(x.getThanhToan()), formatter.format(x.getTienThua()), x.getPhuongThucThanhToan(), x.getNgayTao(), x.getNgayThanhToan(), x.getTinhTrang() == 1 ? "Đã thanh toán" : "Chưa thanh toán", x.getGhiChu()
                };
                model.addRow(row);
            }
        }
    }//GEN-LAST:event_cboTrangThaiItemStateChanged

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        if (jDCNgayStart.getDate().equals("") || JDCNgayEnd.getDate().equals("")) {
            loatTB();
            Icon icon = new ImageIcon(getClass().getResource("/iImage/Exitmini.png"));
            JOptionPane.showMessageDialog(this, "Chưa chọn ngày!", "Error", JOptionPane.INFORMATION_MESSAGE, icon);
        }
        if (jDCNgayStart.getDate().before(JDCNgayEnd.getDate()) == false) {
            Icon icon = new ImageIcon(getClass().getResource("/iImage/Exitmini.png"));
            JOptionPane.showMessageDialog(this, "Ngày bắt đầu phải hơn ngày kết thúc!", "Error", JOptionPane.INFORMATION_MESSAGE, icon);
            loatTB();
            return;
        } else {
            SimpleDateFormat sdf = new SimpleDateFormat("YYYY-MM-dd");
            String dateStart = sdf.format(jDCNgayStart.getDate());
            String dateEnd = sdf.format(JDCNgayEnd.getDate());
            List<HoaDon> listHD = hdsi.searchNgay(dateStart, dateEnd);
            model = (DefaultTableModel) tblHD.getModel();
            model.setRowCount(0);
            for (HoaDon x : listHD) {
                Object row[] = new Object[]{
                    x.getMaHD(), x.getManhanVien().getTenNV(), x.getMakhachHang().getTenKH(), formatter.format(x.getTongTien()), formatter.format(x.getThanhToan()), formatter.format(x.getTienThua()), x.getPhuongThucThanhToan(), x.getNgayTao(), x.getNgayThanhToan(), x.getTinhTrang() == 1 ? "Đã thanh toán" : "Chưa thanh toán", x.getGhiChu()
                };
                model.addRow(row);
            }
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void tblHDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHDMouseClicked
        // TODO add your handling code here:
        Integer index = tblHD.getSelectedRow();
        Long mahdd = (Long) tblHD.getValueAt(index, 0);
        List<HoaDonChiTiet> listHDCT = hdsi.listHDCTGetHD(mahdd);
        model = (DefaultTableModel) tblHDCT.getModel();
        model.setRowCount(0);
        for (HoaDonChiTiet x : listHDCT) {
            Object row[] = new Object[]{
                x.getMaHDCTTT(), x.getMaHDCT().getMaHD(), x.getMaCTSPCT().getMaCTSP(), x.getTenSP(), x.getSoLuong(), formatter.format(x.getDonGia()), formatter.format(x.getTongTienNe())
            };
            model.addRow(row);
        }
    }//GEN-LAST:event_tblHDMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            XSSFWorkbook workbook = new XSSFWorkbook();
            XSSFSheet fSheet = workbook.createSheet("danhsachhaodon");
            XSSFRow row = null;
            Cell cell = null;
            row = fSheet.createRow(1);//tao dong trong ben tren

            cell = row.createCell(0, CellType.STRING);
            cell.setCellValue("STT");

            cell = row.createCell(1, CellType.STRING);
            cell.setCellValue("Mã hóa đơn");

            cell = row.createCell(2, CellType.STRING);
            cell.setCellValue("Mã nhân viên");

            cell = row.createCell(3, CellType.STRING);
            cell.setCellValue("Mã khách hàng");

            cell = row.createCell(4, CellType.STRING);
            cell.setCellValue("Tổng tiền");

            cell = row.createCell(5, CellType.STRING);
            cell.setCellValue("Thanh toán");

            cell = row.createCell(6, CellType.STRING);
            cell.setCellValue("Tiền thừa");

            cell = row.createCell(7, CellType.STRING);
            cell.setCellValue("Phương thức");

            cell = row.createCell(8, CellType.STRING);
            cell.setCellValue("Ngày tạo");

            cell = row.createCell(9, CellType.STRING);
            cell.setCellValue("Ngày thanh toán");

            cell = row.createCell(10, CellType.STRING);
            cell.setCellValue("Trang thái");

            cell = row.createCell(11, CellType.STRING);
            cell.setCellValue("Ghi chú");

            for (int i = 0; i < listHD.size(); i++) {

                row = fSheet.createRow(2 + i);

                cell = row.createCell(0, CellType.NUMERIC);
                cell.setCellValue(i + 1);

                cell = row.createCell(1, CellType.STRING);
                cell.setCellValue(listHD.get(i).getMaHD());

                cell = row.createCell(2, CellType.STRING);
                cell.setCellValue(listHD.get(i).getManhanVien().getMaNV());

                cell = row.createCell(3, CellType.STRING);
                cell.setCellValue(listHD.get(i).getMakhachHang().getMaKH());

                cell = row.createCell(4, CellType.STRING);
                cell.setCellValue(listHD.get(i).getTongTien());

                cell = row.createCell(5, CellType.STRING);
                cell.setCellValue(listHD.get(i).getThanhToan());

                cell = row.createCell(6, CellType.STRING);
                cell.setCellValue(listHD.get(i).getTienThua());

                cell = row.createCell(7, CellType.STRING);
                cell.setCellValue(listHD.get(i).getPhuongThucThanhToan());

                cell = row.createCell(8, CellType.STRING);
                cell.setCellValue(listHD.get(i).getNgayTao());

                cell = row.createCell(9, CellType.STRING);
                cell.setCellValue(listHD.get(i).getNgayThanhToan());

                cell = row.createCell(10, CellType.STRING);
                cell.setCellValue(listHD.get(i).getTinhTrang());

                cell = row.createCell(11, CellType.STRING);
                cell.setCellValue(listHD.get(i).getGhiChu());
            }
            File f = new File("D://DanhSachHoaDon.xlsx");
            try {
                FileOutputStream stream = new FileOutputStream(f);
                workbook.write(stream);
                stream.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
            Icon icon = new ImageIcon(getClass().getResource("/iImage/tichxanh.png"));
            JOptionPane.showMessageDialog(this, "Xuất thành công", "OK", JOptionPane.INFORMATION_MESSAGE, icon);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtSearchMHDCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtSearchMHDCaretUpdate
        // TODO add your handling code here:
        try {
            if (txtSearchMHD.getText().isEmpty()) {
                loatTB();

            } else {
                List<HoaDon> listHD = hdsi.searchListHD(Long.parseLong(txtSearchMHD.getText()));
                model = (DefaultTableModel) tblHD.getModel();
                model.setRowCount(0);
                for (HoaDon x : listHD) {
                    Object row[] = new Object[]{
                        x.getMaHD(), x.getManhanVien().getTenNV(), x.getMakhachHang().getTenKH(), formatter.format(x.getTongTien()), formatter.format(x.getThanhToan()), formatter.format(x.getTienThua()), x.getPhuongThucThanhToan(), x.getNgayTao(), x.getNgayThanhToan(), x.getTinhTrang() == 1 ? "Đã thanh toán" : "Chưa thanh toán", x.getGhiChu()
                    };
                    model.addRow(row);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Không có");
        }

    }//GEN-LAST:event_txtSearchMHDCaretUpdate


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser JDCNgayEnd;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> cboTrangThai;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDCNgayStart;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblHD;
    private javax.swing.JTable tblHDCT;
    private javax.swing.JTextField txtSearchMHD;
    // End of variables declaration//GEN-END:variables
}
